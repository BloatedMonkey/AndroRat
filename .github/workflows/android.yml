name: Android CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    name: Lint and Test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'gradle'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v2

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make scripts executable
      run: |
        chmod +x scripts/*.sh
        chmod +x android/gradlew

    - name: Run health check
      run: bash scripts/doctor.sh

    - name: Repair Gradle wrapper if needed
      run: bash scripts/repair_wrapper.sh

    - name: Run Lint
      working-directory: android
      run: ./gradlew lintDebug --continue

    - name: Check code formatting
      working-directory: android
      run: ./gradlew spotlessCheck

    - name: Run unit tests
      working-directory: android
      run: ./gradlew testDebugUnitTest

    - name: Upload lint reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-reports
        path: android/app/build/reports/lint-results-debug.html

    - name: Upload test reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports
        path: android/app/build/reports/tests/

  build:
    runs-on: ubuntu-latest
    name: Build APK
    needs: lint-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'gradle'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v2

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make scripts executable
      run: |
        chmod +x scripts/*.sh
        chmod +x android/gradlew

    - name: Run health check
      run: bash scripts/doctor.sh

    - name: Repair Gradle wrapper if needed
      run: bash scripts/repair_wrapper.sh

    - name: Build APK
      run: bash scripts/ci_build.sh

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: android/app/build/outputs/apk/debug/*.apk

    - name: Upload build reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-reports
        path: |
          android/app/build/reports/
          android/build/reports/
